// <auto-generated />
using System;
using FeedyVetAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FeedyVetAPI.Migrations
{
    [DbContext(typeof(FeedyVetContext))]
    [Migration("20220419234703_Add_PontosCliente")]
    partial class Add_PontosCliente
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FeedyVetAPI.Models.Animal", b =>
                {
                    b.Property<int>("IdAnimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_animal")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Altura")
                        .HasColumnName("altura")
                        .HasColumnType("float");

                    b.Property<string>("AnimalFoto")
                        .HasColumnName("animal_foto")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Classe")
                        .HasColumnName("classe")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnName("data_nascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Especie")
                        .HasColumnName("especie")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Genero")
                        .HasColumnName("genero")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<double?>("Peso")
                        .HasColumnName("peso")
                        .HasColumnType("float");

                    b.HasKey("IdAnimal")
                        .HasName("pk_id_animal");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.AvaliacaoEstabelecimentoUtilizador", b =>
                {
                    b.Property<int>("IdAvaliacaoEstabelecimentoUtilizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_avaliacao_estabelecimento_utilizador")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Avaliacao")
                        .HasColumnName("avaliacao")
                        .HasColumnType("float");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnName("data_avaliacao")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("IdEstabelecimento")
                        .HasColumnName("id_estabelecimento")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnName("texto")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("IdAvaliacaoEstabelecimentoUtilizador")
                        .HasName("pk_id_avaliacao_estabelecimento_utilizador");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEstabelecimento");

                    b.ToTable("Avaliacao_Estabelecimento_Utilizador");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_cliente")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnName("apelido")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ClienteFoto")
                        .HasColumnName("cliente_foto")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("IdMorada")
                        .HasColumnName("id_morada")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnName("pass")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<string>("PassSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pontos")
                        .HasColumnType("int");

                    b.Property<int?>("Telemovel")
                        .HasColumnName("telemovel")
                        .HasColumnType("int");

                    b.Property<string>("TipoConta")
                        .IsRequired()
                        .HasColumnName("tipo_conta")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<double?>("ValorConta")
                        .HasColumnName("valor_conta")
                        .HasColumnType("float");

                    b.HasKey("IdCliente")
                        .HasName("pk_id_cliente");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("email_uk");

                    b.HasIndex("IdMorada");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.ClienteAnimal", b =>
                {
                    b.Property<int>("IdAnimal")
                        .HasColumnName("id_animal")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("int");

                    b.HasKey("IdAnimal")
                        .HasName("pk_cliente_animal");

                    b.HasIndex("IdCliente");

                    b.ToTable("Cliente_Animal");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Encomenda", b =>
                {
                    b.Property<int>("IdEncomenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_encomenda")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnName("estado")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("IdMorada")
                        .HasColumnName("id_morada")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPagamento")
                        .IsRequired()
                        .HasColumnName("metodo_pagamento")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdEncomenda")
                        .HasName("pk_encomenda");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMorada");

                    b.ToTable("Encomenda");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.EncomendaStock", b =>
                {
                    b.Property<int>("IdEncomenda")
                        .HasColumnName("id_encomenda")
                        .HasColumnType("int");

                    b.Property<int>("IdStock")
                        .HasColumnName("id_stock")
                        .HasColumnType("int");

                    b.Property<int>("Qtd")
                        .HasColumnName("qtd")
                        .HasColumnType("int");

                    b.HasKey("IdEncomenda", "IdStock")
                        .HasName("pk_encomenda_stock");

                    b.HasIndex("IdStock");

                    b.ToTable("Encomenda_Stock");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Estabelecimento", b =>
                {
                    b.Property<int>("IdEstabelecimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_estabelecimento")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AvaliacaoMedia")
                        .HasColumnType("real");

                    b.Property<int>("Contacto")
                        .HasColumnName("contacto")
                        .HasColumnType("int");

                    b.Property<string>("EstabelecimentoFoto")
                        .HasColumnName("estabelecimento_foto")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnName("estado")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("IdMorada")
                        .HasColumnName("id_morada")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("TipoEstabelecimento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstabelecimento")
                        .HasName("pk_id_estabelecimento");

                    b.HasIndex("Contacto")
                        .IsUnique()
                        .HasName("contacto_uk");

                    b.HasIndex("IdMorada");

                    b.HasIndex("Nome", "IdMorada")
                        .IsUnique()
                        .HasName("estabelecimento_idx");

                    b.ToTable("Estabelecimento");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.EstabelecimentoGerente", b =>
                {
                    b.Property<int>("IdEstabelecimento")
                        .HasColumnName("id_estabelecimento")
                        .HasColumnType("int");

                    b.Property<int>("IdFuncionario")
                        .HasColumnName("id_funcionario")
                        .HasColumnType("int");

                    b.HasKey("IdEstabelecimento", "IdFuncionario")
                        .HasName("pk_estabelecimento_gerente");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Estabelecimento_Gerente");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.EstabelecimentoHorario", b =>
                {
                    b.Property<int>("IdEstabelecimentoHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_estabelecimento_horario")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnName("dia_semana")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HorarioAbertura")
                        .IsRequired()
                        .HasColumnName("horario_abertura")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HorarioEncerramento")
                        .IsRequired()
                        .HasColumnName("horario_encerramento")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("IdEstabelecimento")
                        .HasColumnName("id_estabelecimento")
                        .HasColumnType("int");

                    b.HasKey("IdEstabelecimentoHorario")
                        .HasName("pk_id_estabelecimento_horario");

                    b.HasIndex("IdEstabelecimento", "HorarioAbertura", "HorarioEncerramento", "DiaSemana")
                        .IsUnique()
                        .HasName("estabelecimento_horario_idx");

                    b.ToTable("Estabelecimento_Horario");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_funcionario")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .HasColumnName("apelido")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Codigo")
                        .HasColumnName("codigo")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnName("especialidade")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnName("estado")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("FuncionarioFoto")
                        .HasColumnName("funcionario_foto")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnName("pass")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<string>("PassSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Telemovel")
                        .HasColumnName("telemovel")
                        .HasColumnType("int");

                    b.HasKey("IdFuncionario")
                        .HasName("pk_id_funcionario");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("codigo_uk");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("email_vet_uk")
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex("Telemovel")
                        .IsUnique()
                        .HasName("telemovel_uk")
                        .HasFilter("[telemovel] IS NOT NULL");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.FuncionarioEstabelecimento", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .HasColumnName("id_funcionario")
                        .HasColumnType("int");

                    b.Property<int>("IdEstabelecimento")
                        .HasColumnName("id_estabelecimento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnName("data_fim")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnName("data_inicio")
                        .HasColumnType("date");

                    b.HasKey("IdFuncionario", "IdEstabelecimento")
                        .HasName("pk_funcionario_estabelecimento");

                    b.HasIndex("IdEstabelecimento");

                    b.ToTable("Funcionario_Estabelecimento");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.FuncionarioHorario", b =>
                {
                    b.Property<int>("IdFuncionarioHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_funcionario_horario")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnName("dia_semana")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<TimeSpan>("HoraEntrada")
                        .HasColumnName("hora_entrada")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraSaida")
                        .HasColumnName("hora_saida")
                        .HasColumnType("time");

                    b.Property<int>("IdFuncionario")
                        .HasColumnName("id_funcionario")
                        .HasColumnType("int");

                    b.HasKey("IdFuncionarioHorario")
                        .HasName("pk_funcionario_horario");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Funcionario_Horario");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Lembrete", b =>
                {
                    b.Property<int>("IdLembrete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_lembrete")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataLembrete")
                        .HasColumnName("data_lembrete")
                        .HasColumnType("datetime");

                    b.Property<string>("Frequencia")
                        .IsRequired()
                        .HasColumnName("frequencia")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<TimeSpan>("HoraLembrete")
                        .HasColumnName("hora_lembrete")
                        .HasColumnType("time");

                    b.Property<int>("IdAnimal")
                        .HasColumnName("id_animal")
                        .HasColumnType("int");

                    b.Property<string>("LembreteDescricao")
                        .HasColumnName("lembrete_descricao")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("IdLembrete")
                        .HasName("pk_id_lembrete");

                    b.HasIndex("IdAnimal");

                    b.ToTable("Lembrete");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Morada", b =>
                {
                    b.Property<int>("IdMorada")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_morada")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Andar")
                        .HasColumnName("andar")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnName("codigo_postal")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Concelho")
                        .IsRequired()
                        .HasColumnName("concelho")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasColumnName("distrito")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Freguesia")
                        .IsRequired()
                        .HasColumnName("freguesia")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnName("pais")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("Porta")
                        .HasColumnName("porta")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnName("rua")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.HasKey("IdMorada")
                        .HasName("pk_id_morada");

                    b.HasIndex("Rua", "Porta", "Andar", "CodigoPostal", "Freguesia", "Distrito", "Concelho", "Pais")
                        .IsUnique()
                        .HasName("morada_idx")
                        .HasFilter("[andar] IS NOT NULL");

                    b.ToTable("Morada");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Notificacao", b =>
                {
                    b.Property<int>("IdNotificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_notificacao")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataNotificacao")
                        .HasColumnName("data_notificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnName("estado")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("int");

                    b.HasKey("IdNotificacao")
                        .HasName("pk_id_notificacao");

                    b.HasIndex("IdCliente");

                    b.ToTable("Notificacao");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Prescricao", b =>
                {
                    b.Property<int>("IdPrescricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_prescricao")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataExpiracao")
                        .IsRequired()
                        .HasColumnName("data_expiracao")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnName("estado")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdPrescricao")
                        .HasName("pk_id_prescricao");

                    b.ToTable("Prescricao");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Servico", b =>
                {
                    b.Property<int>("IdServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_servico")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataServico")
                        .HasColumnName("data_servico")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnName("estado")
                        .HasColumnType("varchar(35)")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<int>("IdAnimal")
                        .HasColumnName("id_animal")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("IdEstabelecimento")
                        .HasColumnName("id_estabelecimento")
                        .HasColumnType("int");

                    b.Property<int>("IdFuncionario")
                        .HasColumnName("id_funcionario")
                        .HasColumnType("int");

                    b.Property<int>("IdServicoCatalogo")
                        .HasColumnName("id_servico_catalogo")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdServico")
                        .HasName("pk_id_servico");

                    b.HasIndex("IdAnimal");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEstabelecimento");

                    b.HasIndex("IdFuncionario");

                    b.HasIndex("IdServicoCatalogo");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.ServicoCatalogo", b =>
                {
                    b.Property<int>("IdServicoCatalogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_servico_catalogo")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatalogoFoto")
                        .HasColumnName("catalogo_foto")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<TimeSpan>("Duracao")
                        .HasColumnType("time");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnName("estado")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("IdEstabelecimento")
                        .HasColumnName("id_estabelecimento")
                        .HasColumnType("int");

                    b.Property<double>("Preco")
                        .HasColumnName("preco")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnName("tipo")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("IdServicoCatalogo")
                        .HasName("pk_id_servico_catalogo");

                    b.HasIndex("IdEstabelecimento", "Tipo")
                        .IsUnique()
                        .HasName("servico_catalogo_idx");

                    b.ToTable("Servico_Catalogo");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.ServicoPrescricao", b =>
                {
                    b.Property<int>("IdServico")
                        .HasColumnName("id_servico")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescricao")
                        .HasColumnName("id_prescricao")
                        .HasColumnType("int");

                    b.HasKey("IdServico", "IdPrescricao")
                        .HasName("pk_servico_prescricao");

                    b.HasIndex("IdPrescricao");

                    b.ToTable("Servico_Prescricao");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.StockEstabelecimento", b =>
                {
                    b.Property<int>("IdStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_stock")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("IdEstabelecimento")
                        .HasColumnName("id_estabelecimento")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("Preco")
                        .HasColumnName("preco")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Stock")
                        .HasColumnName("stock")
                        .HasColumnType("int");

                    b.Property<string>("TipoStock")
                        .IsRequired()
                        .HasColumnName("tipo_stock")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Volume")
                        .HasColumnName("volume")
                        .HasColumnType("int");

                    b.HasKey("IdStock")
                        .HasName("pk_stock_estabelecimento");

                    b.HasIndex("IdEstabelecimento");

                    b.ToTable("Stock_Estabelecimento");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Tratamento", b =>
                {
                    b.Property<int>("IdPrescricao")
                        .HasColumnName("id_prescricao")
                        .HasColumnType("int");

                    b.Property<int>("IdStock")
                        .HasColumnName("id_stock")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnName("quantidade")
                        .HasColumnType("int");

                    b.HasKey("IdPrescricao", "IdStock")
                        .HasName("pk_tratamento");

                    b.HasIndex("IdStock");

                    b.ToTable("Tratamento");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.AvaliacaoEstabelecimentoUtilizador", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Cliente", "IdClienteNavigation")
                        .WithMany("AvaliacaoEstabelecimentoUtilizador")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("fk_id_cliente_avaliacao")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.Estabelecimento", "IdEstabelecimentoNavigation")
                        .WithMany("AvaliacaoEstabelecimentoUtilizador")
                        .HasForeignKey("IdEstabelecimento")
                        .HasConstraintName("fk_id_estabelecimento_avaliacao")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Cliente", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Morada", "IdMoradaNavigation")
                        .WithMany("Cliente")
                        .HasForeignKey("IdMorada")
                        .HasConstraintName("fk_id_morada");
                });

            modelBuilder.Entity("FeedyVetAPI.Models.ClienteAnimal", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Animal", "IdAnimalNavigation")
                        .WithOne("ClienteAnimal")
                        .HasForeignKey("FeedyVetAPI.Models.ClienteAnimal", "IdAnimal")
                        .HasConstraintName("fk_cliente_animal_id_animal")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.Cliente", "IdClienteNavigation")
                        .WithMany("ClienteAnimal")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("fk_cliente_animal_id_cliente")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Encomenda", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Encomenda")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("fk_encomenda_cliente")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.Morada", "IdMoradaNavigation")
                        .WithMany("Encomenda")
                        .HasForeignKey("IdMorada")
                        .HasConstraintName("fk_encomenda_morada")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.EncomendaStock", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Encomenda", "IdEncomendaNavigation")
                        .WithMany("EncomendaStock")
                        .HasForeignKey("IdEncomenda")
                        .HasConstraintName("fk_encomenda_stock_id_encomenda")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.StockEstabelecimento", "IdStockNavigation")
                        .WithMany("EncomendaStock")
                        .HasForeignKey("IdStock")
                        .HasConstraintName("fk_encomenda_stock_id_stock")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Estabelecimento", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Morada", "IdMoradaNavigation")
                        .WithMany("Estabelecimento")
                        .HasForeignKey("IdMorada")
                        .HasConstraintName("fk_id_morada_cliente")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.EstabelecimentoGerente", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Estabelecimento", "IdEstabelecimentoNavigation")
                        .WithMany("ClinicaGerente")
                        .HasForeignKey("IdEstabelecimento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("ClinicaGerente")
                        .HasForeignKey("IdFuncionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.EstabelecimentoHorario", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Estabelecimento", "IdEstabelecimentoNavigation")
                        .WithMany("EstabelecimentoHorario")
                        .HasForeignKey("IdEstabelecimento")
                        .HasConstraintName("fk_id_clincia_horario")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.FuncionarioEstabelecimento", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Estabelecimento", "IdEstabelecimentoNavigation")
                        .WithMany("FuncionarioEstabelecimento")
                        .HasForeignKey("IdEstabelecimento")
                        .HasConstraintName("fk_funcionario_estabelecimento_id_estabelecimento")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("FuncionarioEstabelecimento")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("fk_funcionario_estabelecimento_id_funcionario")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.FuncionarioHorario", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("FuncionarioHorario")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("fk_funcionario_horario_id_funcionario")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Lembrete", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Animal", "IdAnimalNavigation")
                        .WithMany("Lembrete")
                        .HasForeignKey("IdAnimal")
                        .HasConstraintName("fk_id_animal_lembrete")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Notificacao", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Notificacao")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("fk_id_cliente_notificacao")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Servico", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Animal", "IdAnimalNavigation")
                        .WithMany("Servico")
                        .HasForeignKey("IdAnimal")
                        .HasConstraintName("fk_id_animal_servico")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Servico")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("fk_id_cliente_servico")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.Estabelecimento", "IdEstabelecimentoNavigation")
                        .WithMany("Servico")
                        .HasForeignKey("IdEstabelecimento")
                        .HasConstraintName("fk_id_estabelecimento_servico")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("Servico")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("fk_id_funcionario_servico")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.ServicoCatalogo", "IdServicoCatalogoNavigation")
                        .WithMany("Servico")
                        .HasForeignKey("IdServicoCatalogo")
                        .HasConstraintName("fk_id_catalogo_servico")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.ServicoCatalogo", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Estabelecimento", "IdEstabelecimentoNavigation")
                        .WithMany("ServicoCatalogo")
                        .HasForeignKey("IdEstabelecimento")
                        .HasConstraintName("fk_id_estabelecimento_catalogo")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.ServicoPrescricao", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Prescricao", "IdPrescricaoNavigation")
                        .WithMany("ServicoPrescricao")
                        .HasForeignKey("IdPrescricao")
                        .HasConstraintName("fk_servico_prescricao_id_prescricao")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.Servico", "IdServicoNavigation")
                        .WithMany("ServicoPrescricao")
                        .HasForeignKey("IdServico")
                        .HasConstraintName("fk_servico_prescricao_id_servico")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.StockEstabelecimento", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Estabelecimento", "IdEstabelecimentoNavigation")
                        .WithMany("StockEstabelecimento")
                        .HasForeignKey("IdEstabelecimento")
                        .HasConstraintName("fk_stock_estabelecimento_id_estabelecimento")
                        .IsRequired();
                });

            modelBuilder.Entity("FeedyVetAPI.Models.Tratamento", b =>
                {
                    b.HasOne("FeedyVetAPI.Models.Prescricao", "IdPrescricaoNavigation")
                        .WithMany("Tratamento")
                        .HasForeignKey("IdPrescricao")
                        .HasConstraintName("fk_tratamento_id_prescricao")
                        .IsRequired();

                    b.HasOne("FeedyVetAPI.Models.StockEstabelecimento", "IdStockNavigation")
                        .WithMany("Tratamento")
                        .HasForeignKey("IdStock")
                        .HasConstraintName("fk_tratamento_id_stock")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
